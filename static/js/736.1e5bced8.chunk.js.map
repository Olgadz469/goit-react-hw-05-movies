{"version":3,"file":"static/js/736.1e5bced8.chunk.js","mappings":"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","sources":["Servises/getMovies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '62144ae074e6d6ae76b1ff5ee4b62990';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${API_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchActors } from 'Servises/getMovies';\nimport { List, Text } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  useEffect(() => {\n    const onActorsOfMovie = () => {\n      if (!movieId) return;\n      setLoading(true);\n      fetchActors(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <List>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : defaultImg\n              }\n              alt={original_name}\n            />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["API_URL","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","then","catch","error","console","log","finally","_jsxs","children","_jsx","Loader","map","id","profile_path","original_name","name","character","width","src","alt"],"sourceRoot":""}