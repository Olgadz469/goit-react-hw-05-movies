{"version":3,"file":"static/js/602.6d4cd7dc.chunk.js","mappings":"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","sources":["Servises/getMovies.js","components/FilmsList/FilmsList.styled.jsx","components/FilmsList/FilmsList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '62144ae074e6d6ae76b1ff5ee4b62990';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${API_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: #f52c08;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './FilmsList.styled';\n\nconst FilmsList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default FilmsList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  outline: none;\n\n  &:hover {\n    color: #f52c08;\n    border: 3px solid tomato;\n  }\n`;\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n\n  &:hover {\n    color: #f52c08;\n    border: 3px solid #f52c08;\n  }\n`;\n","import { useState } from 'react';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport FilmsList from 'components/FilmsList/FilmsList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'Servises/getMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const searchMovies = () => {\n      setLoading(true);\n      fetchSearchByKeyword(searchRequest)\n        .then(searchResults => {\n          if (searchResults.length === 0) {\n            alert('No movies found!');\n          }\n          setSearchFilms(searchResults);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    searchMovies();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <main>\n      <Form searchMovies={onSubmit} />\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n\n      {searchFilms && <FilmsList films={searchFilms} />}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["API_URL","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","films","location","useLocation","_jsx","children","map","film","to","id","state","from","title","SearchForm","Input","Button","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","searchRequest","get","useEffect","then","searchResults","length","alert","catch","console","log","finally","Form","Loader","FilmsList"],"sourceRoot":""}